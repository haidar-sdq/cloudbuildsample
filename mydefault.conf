# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    # what times to include
    include       mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';


    server {
        listen       80;
        server_name  localhost;

        # save logs here
        access_log /usr/share/nginx/access.log compression;

        # where the root here
        root /usr/share/nginx/html;

        # what file to server as index
        index index.html index.htm;
        
        #charset koi8-r;

        #access_log  /var/log/nginx/host.access.log  main;
        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|js|flv|swf|mp3|xml)$ {
            root   /usr/share/nginx/html;
            add_header Pragma public;
            add_header Cache-Control "public";
        }
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html$is_args$args;
        }

            # Javascript and CSS files

        location ~* \.(?:css|js)$ {

                try_files $uri =404;

                expires 1y;

                access_log off;

                add_header Cache-Control "public";

        }



            # Any route containing a file extension (e.g. /devicesfile.js)

        location ~ ^.+\..+$ {
                try_files $uri =404;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html/50x.html;
        }

        location = /favicon.ico {
            root   /usr/share/nginx/html;
        }
    }
}
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
